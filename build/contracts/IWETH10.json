{
  "contractName": "IWETH10",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "flashFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC3156FlashBorrower",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "flashLoan",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "maxFlashLoan",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flashMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "depositTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "withdrawFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "depositToAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"depositToAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Wrapped Ether v10 (WETH10) is an Ether (ETH) ERC-20 wrapper. You can `deposit` ETH and obtain a WETH10 balance which can then be operated as an ERC-20 token. You can `withdraw` ETH from WETH10, which will then burn WETH10 token in your wallet. The amount of WETH10 token in any wallet is always identical to the balance of ETH deposited minus the ETH withdrawn with that specific wallet.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by EIP712.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets `value` as allowance of `spender` account over caller account's WETH10 token, after which a call is executed to an ERC677-compliant contract with the `data` parameter. Emits {Approval} event. Returns boolean value indicating whether operation succeeded. For more information on {approveAndCall} format, see https://github.com/ethereum/EIPs/issues/677.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"deposit()\":{\"details\":\"`msg.value` of ETH sent to this contract grants caller account a matching increase in WETH10 token balance. Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to caller account.\"},\"depositTo(address)\":{\"details\":\"`msg.value` of ETH sent to this contract grants `to` account a matching increase in WETH10 token balance. Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to `to` account.\"},\"depositToAndCall(address,bytes)\":{\"details\":\"`msg.value` of ETH sent to this contract grants `to` account a matching increase in WETH10 token balance, after which a call is executed to an ERC677-compliant contract with the `data` parameter. Emits {Transfer} event. Returns boolean value indicating whether operation succeeded. For more information on {transferAndCall} format, see https://github.com/ethereum/EIPs/issues/677.\"},\"flashFee(address,uint256)\":{\"details\":\"The fee to be charged for a given loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` to be charged for the loan, on top of the returned principal.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Initiate a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"receiver\":\"The receiver of the tokens in the loan, and the receiver of the callback.\",\"token\":\"The loan currency.\"}},\"flashMinted()\":{\"details\":\"Returns current amount of flash-minted WETH10 token.\"},\"maxFlashLoan(address)\":{\"details\":\"The amount of currency available to be lended.\",\"params\":{\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` that can be borrowed.\"}},\"nonces(address)\":{\"details\":\"Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases `owner`'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be `address(0)`. - `spender` cannot be `address(0)`. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use `owner`'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves `value` WETH10 token from caller's account to account (`to`),  after which a call is executed to an ERC677-compliant contract with the `data` parameter. A transfer to `address(0)` triggers an ETH withdraw matching the sent WETH10 token in favor of caller. Emits {Transfer} event. Returns boolean value indicating whether operation succeeded. Requirements:   - caller account must have at least `value` WETH10 token. For more information on {transferAndCall} format, see https://github.com/ethereum/EIPs/issues/677.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdraw(uint256)\":{\"details\":\"Burn `value` WETH10 token from caller account and withdraw matching ETH to the same. Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from caller account.  Requirements:   - caller account must have at least `value` balance of WETH10 token.\"},\"withdrawFrom(address,address,uint256)\":{\"details\":\"Burn `value` WETH10 token from account (`from`) and withdraw matching ETH to account (`to`). Emits {Approval} event to reflect reduced allowance `value` for caller account to spend from account (`from`), unless allowance is set to `type(uint256).max` Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from account (`from`). Requirements:   - `from` account must have at least `value` balance of WETH10 token.   - `from` account must have approved caller to spend at least `value` of WETH10 token, unless `from` and caller are the same account.\"},\"withdrawTo(address,uint256)\":{\"details\":\"Burn `value` WETH10 token from caller account and withdraw matching ETH to account (`to`). Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from caller account. Requirements:   - caller account must have at least `value` balance of WETH10 token.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/WETH10/interfaces/IWETH10.sol\":\"IWETH10\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/WETH10/interfaces/IERC20.sol\":{\"keccak256\":\"0x5981d95c7e44d9c7deeb43eba225e8ab581a4242ad3d719d534302b9e6d740e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284e99dff3d3fe615ac4d2d1c24841e83b05cd2e51852f65a51576d88f7dde25\",\"dweb:/ipfs/QmXqLuXKmrGPdbkZc1yzZ5pJBVNe45tTdLsPxFnAuSShXL\"]},\"project:/contracts/WETH10/interfaces/IERC2612.sol\":{\"keccak256\":\"0x39eee320e4d7f26d0c8121bb02024d6099430aa4b1385363951fded82c2d83ac\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://aec8dbf295a78e835ad41d856e43630e2fcff6dffd516b793aafff84a4635420\",\"dweb:/ipfs/QmWbCpvCkp6rgzaGacJ9sQnxZYMGPFXCiKXZRyRjXpmTtW\"]},\"project:/contracts/WETH10/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x7a0afdaceaade0d31c37a09e0ceef82ea430bd5c415a93b7c69795f0042b2be6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a391cc390488022c22cec544c636381781fcd27f60cb410d5760f76a78f4179b\",\"dweb:/ipfs/QmTFK86pevBecsAeon9mNpvThjHJkQ3q9jGKtcyPqXdyRj\"]},\"project:/contracts/WETH10/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x2078ed64867f14159d069260bdee7f695a59c853993ad1736eac4555a283401c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://512ac080c5cae5d14555cbb3db6b0082097b4225f1b7ebdb09d2e4598816ec24\",\"dweb:/ipfs/QmehpWJWjgGYTi7LvzVuksRdm72CdnEMUeVuY9Nax7fQv3\"]},\"project:/contracts/WETH10/interfaces/IWETH10.sol\":{\"keccak256\":\"0xf036cf11d2025745523745c8bfa8e1fbce77b56ee5f0abb22da33a30e942bef5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a38a9fd38a853dc41fffc6edf4a80a440863f9bedf5724b5e858126649a7b41f\",\"dweb:/ipfs/QmVHMaLASFh2oVyDy8NdejAr3WQdBJzrLfHcGWWaqRWpPP\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n// Copyright (C) 2015, 2016, 2017 Dapphub\n// Adapted by Ethereum Community 2021\npragma solidity 0.7.6;\n\nimport \"./IERC20.sol\";\nimport \"./IERC2612.sol\";\nimport \"./IERC3156FlashLender.sol\";\n\n/// @dev Wrapped Ether v10 (WETH10) is an Ether (ETH) ERC-20 wrapper. You can `deposit` ETH and obtain a WETH10 balance which can then be operated as an ERC-20 token. You can\n/// `withdraw` ETH from WETH10, which will then burn WETH10 token in your wallet. The amount of WETH10 token in any wallet is always identical to the\n/// balance of ETH deposited minus the ETH withdrawn with that specific wallet.\ninterface IWETH10 is IERC20, IERC2612, IERC3156FlashLender {\n\n    /// @dev Returns current amount of flash-minted WETH10 token.\n    function flashMinted() external view returns(uint256);\n\n    /// @dev `msg.value` of ETH sent to this contract grants caller account a matching increase in WETH10 token balance.\n    /// Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to caller account.\n    function deposit() external payable;\n\n    /// @dev `msg.value` of ETH sent to this contract grants `to` account a matching increase in WETH10 token balance.\n    /// Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to `to` account.\n    function depositTo(address to) external payable;\n\n    /// @dev Burn `value` WETH10 token from caller account and withdraw matching ETH to the same.\n    /// Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from caller account. \n    /// Requirements:\n    ///   - caller account must have at least `value` balance of WETH10 token.\n    function withdraw(uint256 value) external;\n\n    /// @dev Burn `value` WETH10 token from caller account and withdraw matching ETH to account (`to`).\n    /// Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from caller account.\n    /// Requirements:\n    ///   - caller account must have at least `value` balance of WETH10 token.\n    function withdrawTo(address payable to, uint256 value) external;\n\n    /// @dev Burn `value` WETH10 token from account (`from`) and withdraw matching ETH to account (`to`).\n    /// Emits {Approval} event to reflect reduced allowance `value` for caller account to spend from account (`from`),\n    /// unless allowance is set to `type(uint256).max`\n    /// Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from account (`from`).\n    /// Requirements:\n    ///   - `from` account must have at least `value` balance of WETH10 token.\n    ///   - `from` account must have approved caller to spend at least `value` of WETH10 token, unless `from` and caller are the same account.\n    function withdrawFrom(address from, address payable to, uint256 value) external;\n\n    /// @dev `msg.value` of ETH sent to this contract grants `to` account a matching increase in WETH10 token balance,\n    /// after which a call is executed to an ERC677-compliant contract with the `data` parameter.\n    /// Emits {Transfer} event.\n    /// Returns boolean value indicating whether operation succeeded.\n    /// For more information on {transferAndCall} format, see https://github.com/ethereum/EIPs/issues/677.\n    function depositToAndCall(address to, bytes calldata data) external payable returns (bool);\n\n    /// @dev Sets `value` as allowance of `spender` account over caller account's WETH10 token,\n    /// after which a call is executed to an ERC677-compliant contract with the `data` parameter.\n    /// Emits {Approval} event.\n    /// Returns boolean value indicating whether operation succeeded.\n    /// For more information on {approveAndCall} format, see https://github.com/ethereum/EIPs/issues/677.\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n\n    /// @dev Moves `value` WETH10 token from caller's account to account (`to`), \n    /// after which a call is executed to an ERC677-compliant contract with the `data` parameter.\n    /// A transfer to `address(0)` triggers an ETH withdraw matching the sent WETH10 token in favor of caller.\n    /// Emits {Transfer} event.\n    /// Returns boolean value indicating whether operation succeeded.\n    /// Requirements:\n    ///   - caller account must have at least `value` WETH10 token.\n    /// For more information on {transferAndCall} format, see https://github.com/ethereum/EIPs/issues/677.\n    function transferAndCall(address to, uint value, bytes calldata data) external returns (bool);\n}\n",
  "sourcePath": "/Volumes/Work/Code/Eth/data-processor/contracts/contracts/WETH10/interfaces/IWETH10.sol",
  "ast": {
    "absolutePath": "project:/contracts/WETH10/interfaces/IWETH10.sol",
    "exportedSymbols": {
      "IERC20": [
        1930
      ],
      "IERC2612": [
        1966
      ],
      "IERC3156FlashBorrower": [
        1985
      ],
      "IERC3156FlashLender": [
        2021
      ],
      "IWETH10": [
        2108
      ]
    },
    "id": 2109,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2023,
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "125:22:7"
      },
      {
        "absolutePath": "project:/contracts/WETH10/interfaces/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 2024,
        "nodeType": "ImportDirective",
        "scope": 2109,
        "sourceUnit": 1931,
        "src": "149:22:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/WETH10/interfaces/IERC2612.sol",
        "file": "./IERC2612.sol",
        "id": 2025,
        "nodeType": "ImportDirective",
        "scope": 2109,
        "sourceUnit": 1967,
        "src": "172:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/WETH10/interfaces/IERC3156FlashLender.sol",
        "file": "./IERC3156FlashLender.sol",
        "id": 2026,
        "nodeType": "ImportDirective",
        "scope": 2109,
        "sourceUnit": 2022,
        "src": "197:35:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2028,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1930,
              "src": "660:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1930",
                "typeString": "contract IERC20"
              }
            },
            "id": 2029,
            "nodeType": "InheritanceSpecifier",
            "src": "660:6:7"
          },
          {
            "baseName": {
              "id": 2030,
              "name": "IERC2612",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1966,
              "src": "668:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC2612_$1966",
                "typeString": "contract IERC2612"
              }
            },
            "id": 2031,
            "nodeType": "InheritanceSpecifier",
            "src": "668:8:7"
          },
          {
            "baseName": {
              "id": 2032,
              "name": "IERC3156FlashLender",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2021,
              "src": "678:19:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC3156FlashLender_$2021",
                "typeString": "contract IERC3156FlashLender"
              }
            },
            "id": 2033,
            "nodeType": "InheritanceSpecifier",
            "src": "678:19:7"
          }
        ],
        "contractDependencies": [
          1930,
          1966,
          2021
        ],
        "contractKind": "interface",
        "documentation": {
          "id": 2027,
          "nodeType": "StructuredDocumentation",
          "src": "234:405:7",
          "text": "@dev Wrapped Ether v10 (WETH10) is an Ether (ETH) ERC-20 wrapper. You can `deposit` ETH and obtain a WETH10 balance which can then be operated as an ERC-20 token. You can\n `withdraw` ETH from WETH10, which will then burn WETH10 token in your wallet. The amount of WETH10 token in any wallet is always identical to the\n balance of ETH deposited minus the ETH withdrawn with that specific wallet."
        },
        "fullyImplemented": false,
        "id": 2108,
        "linearizedBaseContracts": [
          2108,
          2021,
          1966,
          1930
        ],
        "name": "IWETH10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 2034,
              "nodeType": "StructuredDocumentation",
              "src": "705:61:7",
              "text": "@dev Returns current amount of flash-minted WETH10 token."
            },
            "functionSelector": "8b28d32f",
            "id": 2039,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "flashMinted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "791:2:7"
            },
            "returnParameters": {
              "id": 2038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2037,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "816:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "815:9:7"
            },
            "scope": 2108,
            "src": "771:54:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2040,
              "nodeType": "StructuredDocumentation",
              "src": "831:228:7",
              "text": "@dev `msg.value` of ETH sent to this contract grants caller account a matching increase in WETH10 token balance.\n Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to caller account."
            },
            "functionSelector": "d0e30db0",
            "id": 2043,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1080:2:7"
            },
            "returnParameters": {
              "id": 2042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1099:0:7"
            },
            "scope": 2108,
            "src": "1064:36:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2044,
              "nodeType": "StructuredDocumentation",
              "src": "1106:224:7",
              "text": "@dev `msg.value` of ETH sent to this contract grants `to` account a matching increase in WETH10 token balance.\n Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to `to` account."
            },
            "functionSelector": "b760faf9",
            "id": 2049,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2046,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "1354:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1353:12:7"
            },
            "returnParameters": {
              "id": 2048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1382:0:7"
            },
            "scope": 2108,
            "src": "1335:48:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2050,
              "nodeType": "StructuredDocumentation",
              "src": "1389:303:7",
              "text": "@dev Burn `value` WETH10 token from caller account and withdraw matching ETH to the same.\n Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from caller account. \n Requirements:\n   - caller account must have at least `value` balance of WETH10 token."
            },
            "functionSelector": "2e1a7d4d",
            "id": 2055,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2052,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2055,
                  "src": "1715:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1715:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1714:15:7"
            },
            "returnParameters": {
              "id": 2054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1738:0:7"
            },
            "scope": 2108,
            "src": "1697:42:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2056,
              "nodeType": "StructuredDocumentation",
              "src": "1745:308:7",
              "text": "@dev Burn `value` WETH10 token from caller account and withdraw matching ETH to account (`to`).\n Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from caller account.\n Requirements:\n   - caller account must have at least `value` balance of WETH10 token."
            },
            "functionSelector": "205c2878",
            "id": 2063,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2058,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2063,
                  "src": "2078:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2078:15:7",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2060,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2063,
                  "src": "2098:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2098:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2077:35:7"
            },
            "returnParameters": {
              "id": 2062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2121:0:7"
            },
            "scope": 2108,
            "src": "2058:64:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2064,
              "nodeType": "StructuredDocumentation",
              "src": "2128:629:7",
              "text": "@dev Burn `value` WETH10 token from account (`from`) and withdraw matching ETH to account (`to`).\n Emits {Approval} event to reflect reduced allowance `value` for caller account to spend from account (`from`),\n unless allowance is set to `type(uint256).max`\n Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from account (`from`).\n Requirements:\n   - `from` account must have at least `value` balance of WETH10 token.\n   - `from` account must have approved caller to spend at least `value` of WETH10 token, unless `from` and caller are the same account."
            },
            "functionSelector": "9555a942",
            "id": 2073,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2066,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2073,
                  "src": "2784:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2065,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2784:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2068,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2073,
                  "src": "2798:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2798:15:7",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2070,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2073,
                  "src": "2818:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2818:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2783:49:7"
            },
            "returnParameters": {
              "id": 2072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2841:0:7"
            },
            "scope": 2108,
            "src": "2762:80:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2074,
              "nodeType": "StructuredDocumentation",
              "src": "2848:421:7",
              "text": "@dev `msg.value` of ETH sent to this contract grants `to` account a matching increase in WETH10 token balance,\n after which a call is executed to an ERC677-compliant contract with the `data` parameter.\n Emits {Transfer} event.\n Returns boolean value indicating whether operation succeeded.\n For more information on {transferAndCall} format, see https://github.com/ethereum/EIPs/issues/677."
            },
            "functionSelector": "5ddb7d7e",
            "id": 2083,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositToAndCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2076,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "3300:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3300:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2078,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "3312:19:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2077,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3312:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3299:33:7"
            },
            "returnParameters": {
              "id": 2082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2081,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "3359:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2080,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3359:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3358:6:7"
            },
            "scope": 2108,
            "src": "3274:91:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2084,
              "nodeType": "StructuredDocumentation",
              "src": "3371:397:7",
              "text": "@dev Sets `value` as allowance of `spender` account over caller account's WETH10 token,\n after which a call is executed to an ERC677-compliant contract with the `data` parameter.\n Emits {Approval} event.\n Returns boolean value indicating whether operation succeeded.\n For more information on {approveAndCall} format, see https://github.com/ethereum/EIPs/issues/677."
            },
            "functionSelector": "cae9ca51",
            "id": 2095,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approveAndCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2086,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2095,
                  "src": "3797:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3797:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2088,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2095,
                  "src": "3814:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3814:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2090,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2095,
                  "src": "3829:19:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2089,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3829:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3796:53:7"
            },
            "returnParameters": {
              "id": 2094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2093,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2095,
                  "src": "3868:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2092,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3868:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3867:6:7"
            },
            "scope": 2108,
            "src": "3773:101:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2096,
              "nodeType": "StructuredDocumentation",
              "src": "3880:585:7",
              "text": "@dev Moves `value` WETH10 token from caller's account to account (`to`), \n after which a call is executed to an ERC677-compliant contract with the `data` parameter.\n A transfer to `address(0)` triggers an ETH withdraw matching the sent WETH10 token in favor of caller.\n Emits {Transfer} event.\n Returns boolean value indicating whether operation succeeded.\n Requirements:\n   - caller account must have at least `value` WETH10 token.\n For more information on {transferAndCall} format, see https://github.com/ethereum/EIPs/issues/677."
            },
            "functionSelector": "4000aea0",
            "id": 2107,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferAndCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2098,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "4495:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4495:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2100,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "4507:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2099,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4507:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2102,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "4519:19:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2101,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4519:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4494:45:7"
            },
            "returnParameters": {
              "id": 2106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2105,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "4558:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2104,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4558:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4557:6:7"
            },
            "scope": 2108,
            "src": "4470:94:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2109,
        "src": "639:3927:7"
      }
    ],
    "src": "125:4442:7"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/WETH10/interfaces/IWETH10.sol",
      "exportedSymbols": {
        "IERC20": [
          1930
        ],
        "IERC2612": [
          1966
        ],
        "IERC3156FlashBorrower": [
          1985
        ],
        "IERC3156FlashLender": [
          2021
        ],
        "IWETH10": [
          2108
        ]
      },
      "license": "GPL-3.0-or-later"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.7",
            ".6"
          ]
        },
        "id": 2023,
        "name": "PragmaDirective",
        "src": "125:22:7"
      },
      {
        "attributes": {
          "SourceUnit": 1931,
          "absolutePath": "project:/contracts/WETH10/interfaces/IERC20.sol",
          "file": "./IERC20.sol",
          "scope": 2109,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2024,
        "name": "ImportDirective",
        "src": "149:22:7"
      },
      {
        "attributes": {
          "SourceUnit": 1967,
          "absolutePath": "project:/contracts/WETH10/interfaces/IERC2612.sol",
          "file": "./IERC2612.sol",
          "scope": 2109,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2025,
        "name": "ImportDirective",
        "src": "172:24:7"
      },
      {
        "attributes": {
          "SourceUnit": 2022,
          "absolutePath": "project:/contracts/WETH10/interfaces/IERC3156FlashLender.sol",
          "file": "./IERC3156FlashLender.sol",
          "scope": 2109,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2026,
        "name": "ImportDirective",
        "src": "197:35:7"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            1930,
            1966,
            2021
          ],
          "contractKind": "interface",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            2108,
            2021,
            1966,
            1930
          ],
          "name": "IWETH10",
          "scope": 2109
        },
        "children": [
          {
            "attributes": {
              "text": "@dev Wrapped Ether v10 (WETH10) is an Ether (ETH) ERC-20 wrapper. You can `deposit` ETH and obtain a WETH10 balance which can then be operated as an ERC-20 token. You can\n `withdraw` ETH from WETH10, which will then burn WETH10 token in your wallet. The amount of WETH10 token in any wallet is always identical to the\n balance of ETH deposited minus the ETH withdrawn with that specific wallet."
            },
            "id": 2027,
            "name": "StructuredDocumentation",
            "src": "234:405:7"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 1930,
                  "type": "contract IERC20"
                },
                "id": 2028,
                "name": "UserDefinedTypeName",
                "src": "660:6:7"
              }
            ],
            "id": 2029,
            "name": "InheritanceSpecifier",
            "src": "660:6:7"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "IERC2612",
                  "referencedDeclaration": 1966,
                  "type": "contract IERC2612"
                },
                "id": 2030,
                "name": "UserDefinedTypeName",
                "src": "668:8:7"
              }
            ],
            "id": 2031,
            "name": "InheritanceSpecifier",
            "src": "668:8:7"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "IERC3156FlashLender",
                  "referencedDeclaration": 2021,
                  "type": "contract IERC3156FlashLender"
                },
                "id": 2032,
                "name": "UserDefinedTypeName",
                "src": "678:19:7"
              }
            ],
            "id": 2033,
            "name": "InheritanceSpecifier",
            "src": "678:19:7"
          },
          {
            "attributes": {
              "functionSelector": "8b28d32f",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "flashMinted",
              "scope": 2108,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Returns current amount of flash-minted WETH10 token."
                },
                "id": 2034,
                "name": "StructuredDocumentation",
                "src": "705:61:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2035,
                "name": "ParameterList",
                "src": "791:2:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 2039,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2036,
                        "name": "ElementaryTypeName",
                        "src": "816:7:7"
                      }
                    ],
                    "id": 2037,
                    "name": "VariableDeclaration",
                    "src": "816:7:7"
                  }
                ],
                "id": 2038,
                "name": "ParameterList",
                "src": "815:9:7"
              }
            ],
            "id": 2039,
            "name": "FunctionDefinition",
            "src": "771:54:7"
          },
          {
            "attributes": {
              "functionSelector": "d0e30db0",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "deposit",
              "scope": 2108,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev `msg.value` of ETH sent to this contract grants caller account a matching increase in WETH10 token balance.\n Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to caller account."
                },
                "id": 2040,
                "name": "StructuredDocumentation",
                "src": "831:228:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2041,
                "name": "ParameterList",
                "src": "1080:2:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2042,
                "name": "ParameterList",
                "src": "1099:0:7"
              }
            ],
            "id": 2043,
            "name": "FunctionDefinition",
            "src": "1064:36:7"
          },
          {
            "attributes": {
              "functionSelector": "b760faf9",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "depositTo",
              "scope": 2108,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev `msg.value` of ETH sent to this contract grants `to` account a matching increase in WETH10 token balance.\n Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to `to` account."
                },
                "id": 2044,
                "name": "StructuredDocumentation",
                "src": "1106:224:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 2049,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2045,
                        "name": "ElementaryTypeName",
                        "src": "1354:7:7"
                      }
                    ],
                    "id": 2046,
                    "name": "VariableDeclaration",
                    "src": "1354:10:7"
                  }
                ],
                "id": 2047,
                "name": "ParameterList",
                "src": "1353:12:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2048,
                "name": "ParameterList",
                "src": "1382:0:7"
              }
            ],
            "id": 2049,
            "name": "FunctionDefinition",
            "src": "1335:48:7"
          },
          {
            "attributes": {
              "functionSelector": "2e1a7d4d",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdraw",
              "scope": 2108,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Burn `value` WETH10 token from caller account and withdraw matching ETH to the same.\n Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from caller account. \n Requirements:\n   - caller account must have at least `value` balance of WETH10 token."
                },
                "id": 2050,
                "name": "StructuredDocumentation",
                "src": "1389:303:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "value",
                      "scope": 2055,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2051,
                        "name": "ElementaryTypeName",
                        "src": "1715:7:7"
                      }
                    ],
                    "id": 2052,
                    "name": "VariableDeclaration",
                    "src": "1715:13:7"
                  }
                ],
                "id": 2053,
                "name": "ParameterList",
                "src": "1714:15:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2054,
                "name": "ParameterList",
                "src": "1738:0:7"
              }
            ],
            "id": 2055,
            "name": "FunctionDefinition",
            "src": "1697:42:7"
          },
          {
            "attributes": {
              "functionSelector": "205c2878",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawTo",
              "scope": 2108,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Burn `value` WETH10 token from caller account and withdraw matching ETH to account (`to`).\n Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from caller account.\n Requirements:\n   - caller account must have at least `value` balance of WETH10 token."
                },
                "id": 2056,
                "name": "StructuredDocumentation",
                "src": "1745:308:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 2063,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 2057,
                        "name": "ElementaryTypeName",
                        "src": "2078:15:7"
                      }
                    ],
                    "id": 2058,
                    "name": "VariableDeclaration",
                    "src": "2078:18:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "value",
                      "scope": 2063,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2059,
                        "name": "ElementaryTypeName",
                        "src": "2098:7:7"
                      }
                    ],
                    "id": 2060,
                    "name": "VariableDeclaration",
                    "src": "2098:13:7"
                  }
                ],
                "id": 2061,
                "name": "ParameterList",
                "src": "2077:35:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2062,
                "name": "ParameterList",
                "src": "2121:0:7"
              }
            ],
            "id": 2063,
            "name": "FunctionDefinition",
            "src": "2058:64:7"
          },
          {
            "attributes": {
              "functionSelector": "9555a942",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawFrom",
              "scope": 2108,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Burn `value` WETH10 token from account (`from`) and withdraw matching ETH to account (`to`).\n Emits {Approval} event to reflect reduced allowance `value` for caller account to spend from account (`from`),\n unless allowance is set to `type(uint256).max`\n Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from account (`from`).\n Requirements:\n   - `from` account must have at least `value` balance of WETH10 token.\n   - `from` account must have approved caller to spend at least `value` of WETH10 token, unless `from` and caller are the same account."
                },
                "id": 2064,
                "name": "StructuredDocumentation",
                "src": "2128:629:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "from",
                      "scope": 2073,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2065,
                        "name": "ElementaryTypeName",
                        "src": "2784:7:7"
                      }
                    ],
                    "id": 2066,
                    "name": "VariableDeclaration",
                    "src": "2784:12:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 2073,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 2067,
                        "name": "ElementaryTypeName",
                        "src": "2798:15:7"
                      }
                    ],
                    "id": 2068,
                    "name": "VariableDeclaration",
                    "src": "2798:18:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "value",
                      "scope": 2073,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2069,
                        "name": "ElementaryTypeName",
                        "src": "2818:7:7"
                      }
                    ],
                    "id": 2070,
                    "name": "VariableDeclaration",
                    "src": "2818:13:7"
                  }
                ],
                "id": 2071,
                "name": "ParameterList",
                "src": "2783:49:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2072,
                "name": "ParameterList",
                "src": "2841:0:7"
              }
            ],
            "id": 2073,
            "name": "FunctionDefinition",
            "src": "2762:80:7"
          },
          {
            "attributes": {
              "functionSelector": "5ddb7d7e",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "depositToAndCall",
              "scope": 2108,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev `msg.value` of ETH sent to this contract grants `to` account a matching increase in WETH10 token balance,\n after which a call is executed to an ERC677-compliant contract with the `data` parameter.\n Emits {Transfer} event.\n Returns boolean value indicating whether operation succeeded.\n For more information on {transferAndCall} format, see https://github.com/ethereum/EIPs/issues/677."
                },
                "id": 2074,
                "name": "StructuredDocumentation",
                "src": "2848:421:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 2083,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2075,
                        "name": "ElementaryTypeName",
                        "src": "3300:7:7"
                      }
                    ],
                    "id": 2076,
                    "name": "VariableDeclaration",
                    "src": "3300:10:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "data",
                      "scope": 2083,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "bytes",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 2077,
                        "name": "ElementaryTypeName",
                        "src": "3312:5:7"
                      }
                    ],
                    "id": 2078,
                    "name": "VariableDeclaration",
                    "src": "3312:19:7"
                  }
                ],
                "id": 2079,
                "name": "ParameterList",
                "src": "3299:33:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 2083,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 2080,
                        "name": "ElementaryTypeName",
                        "src": "3359:4:7"
                      }
                    ],
                    "id": 2081,
                    "name": "VariableDeclaration",
                    "src": "3359:4:7"
                  }
                ],
                "id": 2082,
                "name": "ParameterList",
                "src": "3358:6:7"
              }
            ],
            "id": 2083,
            "name": "FunctionDefinition",
            "src": "3274:91:7"
          },
          {
            "attributes": {
              "functionSelector": "cae9ca51",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "approveAndCall",
              "scope": 2108,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Sets `value` as allowance of `spender` account over caller account's WETH10 token,\n after which a call is executed to an ERC677-compliant contract with the `data` parameter.\n Emits {Approval} event.\n Returns boolean value indicating whether operation succeeded.\n For more information on {approveAndCall} format, see https://github.com/ethereum/EIPs/issues/677."
                },
                "id": 2084,
                "name": "StructuredDocumentation",
                "src": "3371:397:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "spender",
                      "scope": 2095,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2085,
                        "name": "ElementaryTypeName",
                        "src": "3797:7:7"
                      }
                    ],
                    "id": 2086,
                    "name": "VariableDeclaration",
                    "src": "3797:15:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "value",
                      "scope": 2095,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2087,
                        "name": "ElementaryTypeName",
                        "src": "3814:7:7"
                      }
                    ],
                    "id": 2088,
                    "name": "VariableDeclaration",
                    "src": "3814:13:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "data",
                      "scope": 2095,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "bytes",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 2089,
                        "name": "ElementaryTypeName",
                        "src": "3829:5:7"
                      }
                    ],
                    "id": 2090,
                    "name": "VariableDeclaration",
                    "src": "3829:19:7"
                  }
                ],
                "id": 2091,
                "name": "ParameterList",
                "src": "3796:53:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 2095,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 2092,
                        "name": "ElementaryTypeName",
                        "src": "3868:4:7"
                      }
                    ],
                    "id": 2093,
                    "name": "VariableDeclaration",
                    "src": "3868:4:7"
                  }
                ],
                "id": 2094,
                "name": "ParameterList",
                "src": "3867:6:7"
              }
            ],
            "id": 2095,
            "name": "FunctionDefinition",
            "src": "3773:101:7"
          },
          {
            "attributes": {
              "functionSelector": "4000aea0",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "transferAndCall",
              "scope": 2108,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Moves `value` WETH10 token from caller's account to account (`to`), \n after which a call is executed to an ERC677-compliant contract with the `data` parameter.\n A transfer to `address(0)` triggers an ETH withdraw matching the sent WETH10 token in favor of caller.\n Emits {Transfer} event.\n Returns boolean value indicating whether operation succeeded.\n Requirements:\n   - caller account must have at least `value` WETH10 token.\n For more information on {transferAndCall} format, see https://github.com/ethereum/EIPs/issues/677."
                },
                "id": 2096,
                "name": "StructuredDocumentation",
                "src": "3880:585:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 2107,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2097,
                        "name": "ElementaryTypeName",
                        "src": "4495:7:7"
                      }
                    ],
                    "id": 2098,
                    "name": "VariableDeclaration",
                    "src": "4495:10:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "value",
                      "scope": 2107,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 2099,
                        "name": "ElementaryTypeName",
                        "src": "4507:4:7"
                      }
                    ],
                    "id": 2100,
                    "name": "VariableDeclaration",
                    "src": "4507:10:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "data",
                      "scope": 2107,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "bytes",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 2101,
                        "name": "ElementaryTypeName",
                        "src": "4519:5:7"
                      }
                    ],
                    "id": 2102,
                    "name": "VariableDeclaration",
                    "src": "4519:19:7"
                  }
                ],
                "id": 2103,
                "name": "ParameterList",
                "src": "4494:45:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 2107,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 2104,
                        "name": "ElementaryTypeName",
                        "src": "4558:4:7"
                      }
                    ],
                    "id": 2105,
                    "name": "VariableDeclaration",
                    "src": "4558:4:7"
                  }
                ],
                "id": 2106,
                "name": "ParameterList",
                "src": "4557:6:7"
              }
            ],
            "id": 2107,
            "name": "FunctionDefinition",
            "src": "4470:94:7"
          }
        ],
        "id": 2108,
        "name": "ContractDefinition",
        "src": "639:3927:7"
      }
    ],
    "id": 2109,
    "name": "SourceUnit",
    "src": "125:4442:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-19T13:37:30.700Z",
  "devdoc": {
    "details": "Wrapped Ether v10 (WETH10) is an Ether (ETH) ERC-20 wrapper. You can `deposit` ETH and obtain a WETH10 balance which can then be operated as an ERC-20 token. You can `withdraw` ETH from WETH10, which will then burn WETH10 token in your wallet. The amount of WETH10 token in any wallet is always identical to the balance of ETH deposited minus the ETH withdrawn with that specific wallet.",
    "kind": "dev",
    "methods": {
      "DOMAIN_SEPARATOR()": {
        "details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by EIP712."
      },
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "approveAndCall(address,uint256,bytes)": {
        "details": "Sets `value` as allowance of `spender` account over caller account's WETH10 token, after which a call is executed to an ERC677-compliant contract with the `data` parameter. Emits {Approval} event. Returns boolean value indicating whether operation succeeded. For more information on {approveAndCall} format, see https://github.com/ethereum/EIPs/issues/677."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "deposit()": {
        "details": "`msg.value` of ETH sent to this contract grants caller account a matching increase in WETH10 token balance. Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to caller account."
      },
      "depositTo(address)": {
        "details": "`msg.value` of ETH sent to this contract grants `to` account a matching increase in WETH10 token balance. Emits {Transfer} event to reflect WETH10 token mint of `msg.value` from `address(0)` to `to` account."
      },
      "depositToAndCall(address,bytes)": {
        "details": "`msg.value` of ETH sent to this contract grants `to` account a matching increase in WETH10 token balance, after which a call is executed to an ERC677-compliant contract with the `data` parameter. Emits {Transfer} event. Returns boolean value indicating whether operation succeeded. For more information on {transferAndCall} format, see https://github.com/ethereum/EIPs/issues/677."
      },
      "flashFee(address,uint256)": {
        "details": "The fee to be charged for a given loan.",
        "params": {
          "amount": "The amount of tokens lent.",
          "token": "The loan currency."
        },
        "returns": {
          "_0": "The amount of `token` to be charged for the loan, on top of the returned principal."
        }
      },
      "flashLoan(address,address,uint256,bytes)": {
        "details": "Initiate a flash loan.",
        "params": {
          "amount": "The amount of tokens lent.",
          "data": "Arbitrary data structure, intended to contain user-defined parameters.",
          "receiver": "The receiver of the tokens in the loan, and the receiver of the callback.",
          "token": "The loan currency."
        }
      },
      "flashMinted()": {
        "details": "Returns current amount of flash-minted WETH10 token."
      },
      "maxFlashLoan(address)": {
        "details": "The amount of currency available to be lended.",
        "params": {
          "token": "The loan currency."
        },
        "returns": {
          "_0": "The amount of `token` that can be borrowed."
        }
      },
      "nonces(address)": {
        "details": "Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases `owner`'s nonce by one. This prevents a signature from being used multiple times."
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "Sets `value` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be `address(0)`. - `spender` cannot be `address(0)`. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use `owner`'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferAndCall(address,uint256,bytes)": {
        "details": "Moves `value` WETH10 token from caller's account to account (`to`),  after which a call is executed to an ERC677-compliant contract with the `data` parameter. A transfer to `address(0)` triggers an ETH withdraw matching the sent WETH10 token in favor of caller. Emits {Transfer} event. Returns boolean value indicating whether operation succeeded. Requirements:   - caller account must have at least `value` WETH10 token. For more information on {transferAndCall} format, see https://github.com/ethereum/EIPs/issues/677."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "withdraw(uint256)": {
        "details": "Burn `value` WETH10 token from caller account and withdraw matching ETH to the same. Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from caller account.  Requirements:   - caller account must have at least `value` balance of WETH10 token."
      },
      "withdrawFrom(address,address,uint256)": {
        "details": "Burn `value` WETH10 token from account (`from`) and withdraw matching ETH to account (`to`). Emits {Approval} event to reflect reduced allowance `value` for caller account to spend from account (`from`), unless allowance is set to `type(uint256).max` Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from account (`from`). Requirements:   - `from` account must have at least `value` balance of WETH10 token.   - `from` account must have approved caller to spend at least `value` of WETH10 token, unless `from` and caller are the same account."
      },
      "withdrawTo(address,uint256)": {
        "details": "Burn `value` WETH10 token from caller account and withdraw matching ETH to account (`to`). Emits {Transfer} event to reflect WETH10 token burn of `value` to `address(0)` from caller account. Requirements:   - caller account must have at least `value` balance of WETH10 token."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}